# This is a makefile for my PiT demonstrator. It is tailored to SuperMUC's thin 
# islands. Please call it from within projects/particles/pit. Prior to usage, 
# ensure you've invoked module load tbb.



# Include files
-include files.mk


# Set Paths
# ---------
# Please adopt these directories to your Peano installation. The values are 
# used by the compiler and linker calls.
PEANO_HOME   = ../../src
PROJECT_ROOT = ..
PROJECT_HOME = particles
TOOLBOX_HOME = ../../toolboxes



# Set Dimension
# -------------
DIM=-DDim2
#DIM=-DDim3
#DIM=-DDim4


# Configure Peano
#----------------
PROJECT_CFLAGS = 
#PROJECT_CFLAGS = -DSharedTBB
#PROJECT_CFLAGS = -DParallel 
#PROJECT_CFLAGS =  -DParallel -DSharedTBB

PROJECT_LFLAGS = 


EXECUTABLE=peano-noMPI-noTBB$(DIM)
#EXECUTABLE=peano-noMPI-TBB$(DIM)
#EXECUTABLE=peano-MPI-noTBB$(DIM)
#EXECUTABLE=peano-MPI-TBB$(DIM)



# Configure System
# ----------------
# These values are used to assemble the symbols SYSTEM_CFLAGS and SYSTEM_LFLAGS.
INCLUDE_TBB=$(TBB_INC)
#INCLUDE_OMP=$(OMP_INC)
INCLUDE_OMP=-fopenmp
INCLUDE_MPI=$(MPI_INC)


LINK_TBB=$(TBB_SHLIB)
#LINK_OMP=$(OMP_SHLIB)
LINK_OMP=-fopenmp
#LINK_MPI=-lpthread -lrt -lmpich
LINK_MPI=


# Assemble Compiler Flags
# -----------------------
SYSTEM_CFLAGS = $(INCLUDE_TBB) $(INCLUDE_MPI)
#SYSTEM_CFLAGS =  $(INCLUDE_OMP) $(INCLUDE_MPI)
SYSTEM_LFLAGS = $(LINK_TBB)    $(LINK_MPI)
#SYSTEM_LFLAGS =  $(LINK_OMP)    $(LINK_MPI)



# Settings for the Intel Compiler (Release Mode)
# ----------------------------------------------
#CC=skin mpiCC
#CC=mpiCC
CC=icpc
COMPILER_CFLAGS=-std=c++0x -fast -fstrict-aliasing  -DMPICH_IGNORE_CXX_SEEK -fno-rtti -no-ipo -ip -xSSE4.2
#COMPILER_CFLAGS=-std=c++0x -O3 -fstrict-aliasing  -DMPICH_IGNORE_CXX_SEEK
COMPILER_LFLAGS=-lrt




OBJECTS=$(SOURCES:.cpp=.o)



all: header build



files.mk:
	touch files.mk
	echo -n SOURCES= > files.mk
	find $(PEANO_HOME) -name '*.cpp' -printf '%p ' >> files.mk
	find $(PROJECT_ROOT)/$(PROJECT_HOME) -name '*.cpp' -printf '%p ' >> files.mk
	#find $(PROJECT_ROOT)/particles/*.cpp -printf '%p ' >> files.mk
	find $(TOOLBOX_HOME) -name '*.cpp' -printf '%p ' >> files.mk
	find $(PEANO_HOME) -name '*.cpp' -printf 'COMPILE %p TO %p OBJECT FILE\n' >> compiler-minutes.txt
	find $(PROJECT_ROOT)/$(PROJECT_HOME) -name '*.cpp' -printf 'COMPILE %p TO %p OBJECT FILE\n' >> compiler-minutes.txt
	echo -n '\n\nLINK OBJECT FILES OF ' >> compiler-minutes.txt
	find $(PEANO_HOME) -name '*.cpp' -printf '%p ' >> compiler-minutes.txt
	find $(PROJECT_ROOT)/$(PROJECT_HOME) -name '*.cpp' -printf '%p ' >> compiler-minutes.txt



header:
	@echo  --- This is Peano 3 ---


build: files.mk $(OBJECTS)
	$(CC) $(OBJECTS) -o $(EXECUTABLE) $(PROJECT_LFLAGS) $(COMPILER_LFLAGS) $(SYSTEM_LFLAGS) 
	@echo
	@echo build of Peano with PiT \(Particle-in-Tree\) successful
	@echo visit Peano\'s homepage at http://www.peano-framework.org


clean:
	rm -f $(EXECUTABLE)
	rm -f $(OBJECTS)
	rm -f files.mk
	rm -f compiler-minutes.txt


$(OBJECTS): %.o : %.cpp
	$(CC) $(DIM) $(PROJECT_CFLAGS) $(COMPILER_CFLAGS) $(SYSTEM_CFLAGS) -I$(PROJECT_ROOT) -I$(PEANO_HOME) -I$(TOOLBOX_HOME) -c $< -o $@
